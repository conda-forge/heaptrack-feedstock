{% set name = "heaptrack" %}
{% set version = "1.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/KDE/heaptrack/archive/v{{ version }}.tar.gz
  sha256: 3aeea57e040d863a1ef95c3208ff0f163474a8bd8e10d4ece5e5f2137ab6436c
  folder: source
  patches:
    - stdc_format.patch

build:
  number: 0
  skip: true  # [not linux]
  ignore_run_exports:
    - elfutils


requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make

  host:
    - boost-cpp
    - libunwind
    - elfutils

  run:
    - boost-cpp
    - libunwind
    - elfutils

test:
  commands:
    - heaptrack_print --help

about:
  home: https://github.com/KDE/heaptrack
  license: LGPL-2.1-or-later
  license_file: source/COPYING
  summary: heaptrack - a heap memory profiler for Linux
  description: |
    Heaptrack traces all memory allocations and annotates these events with stack traces. Dedicated analysis tools then allow you to interpret the heap memory profile to:
      find hotspots that need to be optimized to reduce the memory footprint of your application
      find memory leaks, i.e. locations that allocate memory which is never deallocated
      find allocation hotspots, i.e. code locations that trigger a lot of memory allocation calls
      find temporary allocations, which are allocations that are directly followed by their deallocation
  doc_url: https://userbase.kde.org/Heaptrack
  dev_url: https://github.com/KDE/heaptrack

extra:
  recipe-maintainers:
    - bcouturi
    - chrisburr

